#!/bin/bash
#
# MIT License
# 
# Copyright (c) 2017 Arkadiusz Netczuk <dev.arnet@gmail.com>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#


#
# This file was automatically generated from '@GENERATOR_FILE@'. All changes will be lost.
#

set -e


SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"


checkTool=""

for i in "$@"; do
case $i in
    --tool=*)       checkTool="${i#*=}"
                    shift                   # past argument=value
                    ;;
    *)              ;;                      # unknown option, ignore
esac
done


if [ ! -z "$checkTool" ]; then
	echo "Running tool: $checkTool"
fi


case "$checkTool" in
    "")              ## no tool, just run test suite
                     $SCRIPT_DIR/@test_name@ $@
                     exit $?;;
                    
    memcheck)        valgrind --leak-check=full --show-leak-kinds=all $SCRIPT_DIR/@test_name@ $@
                     exit $?;;
                   
    callgrind)       valgrind --tool=callgrind $SCRIPT_DIR/@test_name@ $@
                     exit $?;;
                   
    cover|coverage)  ## prepare coverage
                     coverage_dir=$SCRIPT_DIR/@test_name@_coverage
                     rm -rf $coverage_dir
                     mkdir -p $coverage_dir
                     lcov --base-directory . --directory . --zerocounters -q
                     
                     ## execute tests
                     $SCRIPT_DIR/@test_name@ $@
                     exitCode=$?
                     
                     ## generate report
                     lcov --base-directory . --directory . -c -o $coverage_dir/test.info
                     genhtml -o $coverage_dir -t "@test_name@ test coverage" --num-spaces 4 $coverage_dir/test.info
                     
                     echo -e "\nReport file: $coverage_dir/index.html"
                     exit $exitCode;;
    
    *)               echo "Unknown tool: '$checkTool'"
                     exit 1;; 
esac

